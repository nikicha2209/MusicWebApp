@model HashSet<MusicWebApp.Data.Models.Song>

<style>
    /* Глобални стилове */
    body {
        font-family: 'Arial', sans-serif;
        background-color: #f8f9fa;
        color: #333;
        margin: 0;
        padding: 0;
        padding-top:20px;
    }

    h1 {
        color: #007BFF;
        text-shadow: 2px 2px 5px rgba(0, 0, 0, 0.1);
    }

    /* Формата за търсене */
    .search-container {
        display: flex;
        flex-direction: column;
        align-items: center;
        margin-top: 100px; 
        margin-bottom: 30px;
    }


    .search-input {
        width: 100%;
        max-width: 450px;
        padding: 15px;
        border: 2px solid #007BFF;
        border-radius: 25px;
        font-size: 1.2rem;
        box-shadow: 0 4px 10px rgba(0, 123, 255, 0.2);
        transition: box-shadow 0.3s ease;
    }

        .search-input:focus {
            outline: none;
            box-shadow: 0 4px 15px rgba(0, 123, 255, 0.4);
        }

    .search-btn {
        margin-top: 15px;
        padding: 12px 30px;
        font-size: 1.2rem;
        font-weight: bold;
        color: #fff;
        background-color: #007BFF;
        border: none;
        border-radius: 25px;
        cursor: pointer;
        box-shadow: 0 4px 10px rgba(0, 123, 255, 0.3);
        transition: background-color 0.3s ease, box-shadow 0.3s ease;
    }

        .search-btn:hover {
            background-color: #0056b3;
            box-shadow: 0 6px 20px rgba(0, 86, 179, 0.4);
        }

    /* Резултати от търсене */
    .playlist {
        margin-top: 30px;
        display: grid;
        grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
        gap: 20px;
        padding: 20px;
    }

    .song-item {
        display: flex;
        align-items: center;
        padding: 15px;
        background-color: #fff;
        border-radius: 15px;
        box-shadow: 0 4px 15px rgba(0, 0, 0, 0.1);
        transition: transform 0.3s ease, box-shadow 0.3s ease;
    }

        .song-item:hover {
            transform: translateY(-5px);
            box-shadow: 0 6px 25px rgba(0, 0, 0, 0.15);
        }

    .song-thumbnail img {
        width: 100px;
        height: 100px;
        border-radius: 10px;
        margin-right: 15px;
        transition: transform 0.3s ease;
    }

        .song-thumbnail img:hover {
            transform: scale(1.1);
        }

    .song-info h3 {
        font-size: 1.4rem;
        color: #333;
        margin: 0 0 5px 0;
    }

    .song-info p {
        font-size: 1rem;
        color: #666;
    }

    .song-play button {
        margin-left: auto;
        padding: 10px 20px;
        font-size: 1.1rem;
        color: #fff;
        background-color: #28a745;
        border: none;
        border-radius: 25px;
        cursor: pointer;
        box-shadow: 0 4px 10px rgba(40, 167, 69, 0.3);
        transition: background-color 0.3s ease, box-shadow 0.3s ease;
    }

        .song-play button:hover {
            background-color: #218838;
            box-shadow: 0 6px 20px rgba(33, 136, 56, 0.4);
        }

    /* Съобщения */
    .alert {
        font-weight: bold;
        font-size: 1.1rem;
        margin: 15px auto;
        text-align: center;
        padding: 10px;
        border-radius: 5px;
        max-width: 500px;
    }

    .alert-danger {
        color: #721c24;
        background-color: #f8d7da;
        border: 1px solid #f5c6cb;
    }

    .alert-info {
        color: #0c5460;
        background-color: #d1ecf1;
        border: 1px solid #bee5eb;
    }
</style>

<div class="search-container">
    <h1>Find Your Favorite Songs</h1>
    <form asp-action="Search" method="post">
        <input type="text" name="query" placeholder="Search for songs..." class="search-input" />
        <button type="submit" class="search-btn">Search</button>
    </form>
</div>

@if (ViewBag.ErrorMessage != null)
{
    <div class="alert alert-danger">@ViewBag.ErrorMessage</div>
}

@if (ViewBag.Message != null)
{
    <div class="alert alert-info">@ViewBag.Message</div>
}

@if (Model != null && Model.Any())
{
    <div class="playlist">
        @foreach (var song in Model)
        {
            <div class="song-item">
                <div class="song-thumbnail">
                    <img src="@song.ThumbnailUrl" alt="@song.Title" />
                </div>
                <div class="song-info">
                    <h3>@song.Title</h3>
                    <p>@song.Artist?.Name</p>
                </div>
                <div class="song-play">
                    <button onclick="playSong('@song.YouTubeVideoId')">Play</button>
                </div>
            </div>
        }
    </div>
}
else if (Model != null && !Model.Any())
{
    <div class="alert alert-info">No songs found. Try another search.</div>
}

<script>
    let player;

    function playSong(videoId) {
        if (!videoId) {
            alert("Invalid video ID.");
            return;
        }

        if (!player) {
            player = new YT.Player('youtube-player', {
                videoId: videoId,
                playerVars: {
                    'autoplay': 1,
                    'mute': 0,
                    'controls': 0,
                    'rel': 0,
                    'showinfo': 0
                }
            });
        } else {
            player.loadVideoById(videoId);
        }
    }

    function loadYouTubeAPI() {
        const tag = document.createElement('script');
        tag.src = "https://www.youtube.com/iframe_api";
        const firstScriptTag = document.getElementsByTagName('script')[0];
        firstScriptTag.parentNode.insertBefore(tag, firstScriptTag);
    }

    loadYouTubeAPI();
</script>

<div id="youtube-player" style="display:none;"></div>
